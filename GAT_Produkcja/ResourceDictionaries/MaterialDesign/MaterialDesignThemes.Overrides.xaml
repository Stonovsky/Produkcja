<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="GAT_Produkcja.UI.ResourceDictionaries.MaterialDesign"
                    xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">


    <!--#region MD TextBox -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1" />
        <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1,-20" />
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
    </Style>
    <!--#endregion-->

    <!--#region MD TextBlock --><!--
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
        <Setter Property="Foreground"   Value="{DynamicResource MaterialDesignBody}"/>
    </Style>
    --><!--#endregion-->

    <!--#region MD ComboBox -->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin"   Value="5"/>
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1" />
        <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1,-20" />
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
    </Style>
    <!--#endregion-->

    <!--#region MD Button Raised -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
        <Setter Property="Padding"  Value="15 0 15 0"/>
    </Style>
    <!--#endregion-->

    <!--#region DatePicker -->
    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MaterialDesignDatePicker}">
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="1" />
        <Setter Property="materialDesign:HintAssist.FloatingOffset" Value="1,-20" />
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="True" />
    </Style>
    <!--#endregion-->

    <!--#region DataGrid -->
    <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserReorderColumns" Value="True" />
        <Setter Property="ClipboardCopyMode" Value="None" />
        <Setter Property="materialDesign:DataGridAssist.CellPadding" Value="4 2 2 2" />
        <Setter Property="materialDesign:DataGridAssist.ColumnHeaderPadding" Value="4 2 2 2" />
    </Style>
    
    <Style
        TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        TextWrapping="Wrap"
                        Text="{Binding}"
                        TextAlignment="Right" 
                        />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region GroupBox -->
    <Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource MaterialDesignGroupBox}">
        <Setter Property="Padding" Value="5"/>
        <!--<Setter Property="Margin" Value="5 5 5 0"/>-->
        <Setter Property="BorderThickness" Value="0"/>

        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="AliceBlue" />
            </Style>
        </Style.Resources>
    </Style>

    <!--<Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--#endregion-->

    <!--#region TabControl -->

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem"
                                                     >
                    <Border Name="Border" 
                                                BorderThickness="1,1,1,0" 
                                                BorderBrush="Transparent" 
                                                CornerRadius="5,5,0,0" 
                                                Margin="0,0">
                        <ContentPresenter x:Name="ContentSite"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                ContentSource="Header"
                                                Margin="10,2"

                                                              />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#2A5CAC" />
                            <Setter Property="Foreground" Value="AliceBlue" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#6B6B6D" />
                            <Setter Property="Foreground" Value="AliceBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <Style TargetType="Expander" BasedOn="{StaticResource MaterialDesignExpander}">
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="IsExpanded" Value="False"/>
    </Style>
    
</ResourceDictionary>