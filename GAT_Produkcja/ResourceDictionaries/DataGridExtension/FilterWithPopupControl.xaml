<Control x:Name="Control" 
         x:Class="GAT_Produkcja.UI.ResourceDictionaries.DataGridExtension.FilterWithPopupControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         
         >
  <Control.Template>
    <ControlTemplate>
      <Grid>
        <ToggleButton x:Name="button">
          <ToggleButton.Style>
            <Style TargetType="Control">
              <!-- Only show the button if the filter is active or if the mouse is over the column header -->
              <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Filter, ElementName=Control}" Value="{x:Null}">
                  <Setter Property="Visibility" Value="Visible"/> <!--Was "Hidden"-->
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGridColumnHeader}}" Value="True">
                  <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ToggleButton.Style>
          <!-- Reuse the standard icon, but change color to green -->
          <Control Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}" Foreground="Gray"/>
        </ToggleButton>
        <Popup x:Name="popup" IsOpen="{Binding Path=IsChecked, ElementName=button, Mode=TwoWay}" 
               AllowsTransparency="True"
               DataContext="{Binding ElementName=Control}" StaysOpen="False">
          <Border 
                  Background="{DynamicResource MaterialDesignPaper}"  
                  BorderBrush="Gray" BorderThickness="1" CornerRadius="3" Padding="4">
            
              <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Wprowadź filtr:" Margin="5"
                               Foreground="{DynamicResource MaterialDesignBody}"
                               />
                    <Button Content="X" 
                            Width="20"
                            Height="20"  
                            Padding="0"
                            Margin="10 0 0 0"
                            Command="{Binding WyczyscFiltrCommand}"/>
                </StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition/>
                      <RowDefinition/>
                    </Grid.RowDefinitions>

                    <TextBox 
                             Grid.Row="0" 
                             Text="{Binding Path=Minimum, StringFormat=N2}"  
                             VerticalAlignment="Center"
                             materialDesign:HintAssist.Hint="Od:" materialDesign:HintAssist.IsFloating="True"
                             Foreground="{DynamicResource MaterialDesignBody}"
                             />

                    <TextBox Grid.Column="1" Grid.Row="1" 
                             Text="{Binding Path=Maximum, StringFormat=N2}" 
                             VerticalAlignment="Center"
                             materialDesign:HintAssist.Hint="Do:" materialDesign:HintAssist.IsFloating="True"
                             Foreground="{DynamicResource MaterialDesignBody}"
                             />
              </Grid>
            </StackPanel>
          </Border>
        </Popup>
      </Grid>
    </ControlTemplate>
  </Control.Template>
</Control>
