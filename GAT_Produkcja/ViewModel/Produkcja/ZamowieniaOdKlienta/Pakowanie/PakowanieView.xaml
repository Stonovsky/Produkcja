<UserControl x:Class="GAT_Produkcja.ViewModel.Produkcja.ZamowieniaOdKlienta.Pakowanie.PakowanieView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GAT_Produkcja.ViewModel.Produkcja.ZamowieniaOdKlienta.Pakowanie"
             mc:Ignorable="d"
             xmlns:startUp="clr-namespace:GAT_Produkcja.Startup"
             startUp:ViewModelLocator.AutoWireViewModel="True"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:cmd="http://www.galasoft.ch/mvvmlight"
             xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
             
             d:DesignHeight="450" d:DesignWidth="800"
             Language="pl-PL"
             >

    <UserControl.Resources>
        <CollectionViewSource x:Key="ListaRodzajowPakowania" Source="{Binding ListaRodzajowPakowania, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding ZamknijOknoCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding ZaladujPodczasUruchomieniaCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>


    
    <Grid>
        <DataGrid
            ItemsSource="{Binding ListaPakowanie}"
            SelectedItem="{Binding WybranePakowanie, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsReadOnly="False"
            AutoGenerateColumns="False"
            materialDesign:DataGridAssist.ColumnHeaderPadding="3"
            materialDesign:DataGridAssist.CellPadding="0"
            materialDesign:DataGridAssist.EnableEditBoxAssist="True"
            >

            <i:Interaction.Triggers>


                <i:EventTrigger EventName="CellEditEnding">
                    <cmd:EventToCommand Command="{Binding PoEdycjiKomorkiDataGridCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="AddingNewItem">
                    <cmd:EventToCommand Command="{Binding OnAddingNewRowCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.ContextMenu>

            <ContextMenu>
                <MenuItem Header="Usuń" Command="{Binding UsunCommand }"/>
            </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>
                <DataGridComboBoxColumn Header="Rodzaj pakowania"
                                        Width="150"
                                        ItemsSource="{Binding Source={StaticResource ListaRodzajowPakowania}}"
                                        SelectedItemBinding="{Binding WybranyRodzajPakowania, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        DisplayMemberPath="RodzajPakowania"
                                        SelectedValuePath="IDZamowienieHandlowePakowanieRodzaj"
                                        SelectedValueBinding="{Binding  IDZamowienieHandlowePakowanieRodzaj, 
                                                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                        ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                        IsReadOnly="False"
                                        >
                </DataGridComboBoxColumn>

                <DataGridTextColumn Header="Szerokość" Width="80" Binding="{Binding Szerokosc, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                                                ValidatesOnDataErrors=True, NotifyOnValidationError=True}"/>
                <DataGridTextColumn Header="Długość" Width="80" Binding="{Binding Dlugosc, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Wysokość" Width="80" Binding="{Binding Wysokosc, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Ilość" Width="80" Binding="{Binding Ilosc, StringFormat=N2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Uwagi" Width="auto" Binding="{Binding Uwagi,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
