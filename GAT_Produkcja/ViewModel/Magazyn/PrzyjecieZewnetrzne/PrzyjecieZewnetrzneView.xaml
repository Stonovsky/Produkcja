<Window x:Class="GAT_Produkcja.ViewModel.Magazyn.PrzyjecieZewnetrzne.PrzyjecieZewnetrzneView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GAT_Produkcja.ViewModel.Magazyn.PrzyjecieZewnetrzne"
        mc:Ignorable="d"
        
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:dotNetKitControls="clr-namespace:DotNetKit.Windows.Controls;assembly=DotNetKit.Wpf.AutoCompleteComboBox"
             xmlns:startUp="clr-namespace:GAT_Produkcja.Startup"
             startUp:ViewModelLocator.AutoWireViewModel="True"

         TextElement.Foreground="{DynamicResource MaterialDesignBody}"
         TextElement.FontWeight="Regular"
         TextElement.FontSize="13"
         TextOptions.TextFormattingMode="Ideal"
         TextOptions.TextRenderingMode="Auto"
         Background="{DynamicResource MaterialDesignPaper}"
         FontFamily="{DynamicResource MaterialDesignFont}"
        
        Title="Przyjęcie zewnętrzne (PZ)" Height="650" Width="1100" MinWidth="500"
            WindowStartupLocation="CenterScreen"
            Language="pl-PL"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding ZamknijOknoCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding ZaladujWartosciPoczatkoweCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <CollectionViewSource x:Key="MagazynyTest" Source="{Binding ListaMagazynow}"/>
        <CollectionViewSource x:Key="ListaJm" Source="{Binding ListaJm}"/>
        <CollectionViewSource x:Key="ListaTowarow" Source="{Binding ListaTowarow}"/>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="280"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--#region Tytul-->
        <Grid
            Grid.Row="0"
            Grid.ColumnSpan="2"
            >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel 
            Grid.Column="0"
            VerticalAlignment="Center">
                <TextBlock Text="{Binding Tytul}"
                       Foreground="CadetBlue"
                       FontSize="14"
                       FontWeight="Bold"
                       />

                <StackPanel Orientation="Horizontal"
                            Margin="10">
                    <ComboBox ItemsSource="{Binding ListaRuchStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding WybranyRuchStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                          DisplayMemberPath="Status"
                            SelectedValuePath="IDRuchStatus"
                            SelectedValue="{Binding NaglowekRuch.IDRuchStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Status" materialDesign:HintAssist.IsFloating="True"
                            Margin="10"
                            VerticalAlignment="Bottom"
                              IsReadOnly="True"
                              IsEnabled="False"
                              Width="200"
                          />
                    <TextBox 
                            Grid.Row="2"
                            Text="{Binding NaglowekRuch.NrDokumentuKontrahenta, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            Margin="10"
                            materialDesign:HintAssist.Hint="Nr dokumentu przyjęcia"
                            materialDesign:HintAssist.IsFloating="True"
                        Width="150"
                >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding PrzyZmianieTekstuComboboxaCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                    </TextBox>
                </StackPanel>
                <!--IsReadOnly="{Binding WybranyStatus, Converter={converters:StatusZapotrzebowaniaIsReadOnlyBoolConverter}}"-->

            </StackPanel>
            <StackPanel Grid.Column="2" Orientation="Horizontal">
                <Button Content="Usuń"
                            Command="{Binding UsunCommand}"
                            Margin="5"
                            />
                <Button Content="Zapisz"
                            Command="{Binding ZapiszCommand}"
                            ToolTip="{Binding TooltipZapiszCommand}"
                            ToolTipService.ShowOnDisabled="True"
                            Margin="5"/>
            </StackPanel>
        </Grid>
        <!--#endregion-->

        <!--#region Lewa strona-->
        <!--#region Kontrahent-->
        <materialDesign:Card 
                Grid.Row="1" Grid.Column="0"
                materialDesign:ShadowAssist.ShadowDepth="Depth5" 
                Margin="10"
                VerticalAlignment="Stretch">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical"
                            Grid.Row="0"
                            Margin="5"
                            >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock 
                            Grid.Column="0"        
                            Text="Dostawca:"
                            FontSize="14"
                            Foreground="CadetBlue"
                            Margin="5"/>
                        <Button Width="60" ToolTip="Wyszukaj firmę"
                                Grid.Column="2"
                                Command="{Binding PokazEwidencjeKontrahentowCommand}"
                                Margin="10"
                                VerticalAlignment="Top"
                                    >
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Magnify" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <!--<TextBlock Text="Dodaj" VerticalAlignment="Center" FontSize="16"/>-->
                            </StackPanel>
                        </Button>
                    </Grid>

                    <Separator Foreground="Gray"
                               Grid.Row="0"
                               />
                </StackPanel>


                <TextBox Text="{Binding Kontrahent.Nazwa}"
                               Grid.Row="1"
                               materialDesign:HintAssist.Hint="Nazwa firmy"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                             />
                <TextBox Text="{Binding Kontrahent.Ulica}"
                               Grid.Row="2"
                               materialDesign:HintAssist.Hint="Ulica"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                         
                         />
                <StackPanel Orientation="Horizontal"
                               Grid.Row="3"
                                >
                    <TextBox Text="{Binding Kontrahent.KodPocztowy}"
                               materialDesign:HintAssist.Hint="Kod pocztowy"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                             />

                    <TextBox Text="{Binding Kontrahent.Miasto}"
                               materialDesign:HintAssist.Hint="Miasto"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                             />
                </StackPanel>
                <TextBox Text="{Binding Kontrahent.Wojewodztwo}"
                               Grid.Row="4"
                               materialDesign:HintAssist.Hint="Województwo"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                         />
            </Grid>
        </materialDesign:Card>
        <!--#endregion-->

        <!--#endregion-->

        <!--#region Prawa strona-->
        <materialDesign:Card 
                Grid.Row="1" 
                Grid.Column="1"
                materialDesign:ShadowAssist.ShadowDepth="Depth5" 
                Margin="10"
                VerticalAlignment="Stretch">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock 
                        Grid.Row="0"    
                        Text="Przyjęto na:"
                           Foreground="CadetBlue"
                           FontSize="14"
                           Margin="10"

                           />
                <ComboBox 
                    Grid.Row="1"
                    ItemsSource="{Binding ListaFirmGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding WybranaFirmaGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                          DisplayMemberPath="Nazwa"
                            SelectedValuePath="IDFirma"
                            SelectedValue="{Binding NaglowekRuch.IDFirmaDo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Nazwa Firmy" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                          />
                <ComboBox 
                            Grid.Row="2"
                            ItemsSource="{Binding ListaMagazynow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            SelectedItem="{Binding WybranyMagazyn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                            DisplayMemberPath="Nazwa"
                            SelectedValuePath="IDMagazyn"
                            SelectedValue="{Binding NaglowekRuch.IDMagazynDo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Nazwa Magazynu" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                          />

                <ComboBox 
                            Grid.Row="3"
                            ItemsSource="{Binding ListaPracownikowGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            SelectedItem="{Binding WybranyPracownikGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                            DisplayMemberPath="ImieINazwiskoGAT"
                            SelectedValuePath="ID_PracownikGAT"
                            SelectedValue="{Binding NaglowekRuch.ID_PracownikGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Przez" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                          >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <!--<i:InvokeCommandAction Command="{Binding PrzyZmianieTekstuComboboxaCommand}"/>-->
                            <cmd:EventToCommand Command="{Binding PrzyZmianieTekstuComboboxaCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <!--IsReadOnly="{Binding WybranyStatus, Converter={converters:StatusZapotrzebowaniaIsReadOnlyBoolConverter}}"-->

            </Grid>
        </materialDesign:Card>
        <!--#endregion-->

        <!--#region Towar -->
        <DataGrid
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            ItemsSource="{Binding ListaTowarowRuch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            SelectedItem="{Binding WybranyTowarRuch}"
            AutoGenerateColumns="False"
            RowHeight="30"
            Padding="0"
            Margin="5"
            materialDesign:DataGridAssist.ColumnHeaderPadding="3"
            materialDesign:DataGridAssist.CellPadding="0"
            materialDesign:DataGridAssist.EnableEditBoxAssist="True"
            FocusManager.FocusedElement="{Binding ElementName=txtIlosc}" 
            >
            
        <!--FocusManager.FocusedElement="{Binding ElementName=cmbTowar}"

        AutoGenerateColumns="False" 
            CanUserResizeColumns="True" 
            CanUserReorderColumns="True"
            CanUserAddRows="True"
            AlternatingRowBackground="LightGray"
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Auto"
        dgx:DataGridFilter.IsAutoFilterEnabled="True"
        HeadersVisibility="All"-->
        

            <i:Interaction.Triggers>
                
        
                <i:EventTrigger EventName="CellEditEnding">
                    <cmd:EventToCommand Command="{Binding PoEdycjiKomorkiDataGridCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="AddingNewItem">
                    <cmd:EventToCommand Command="{Binding OnAddingNewRowCommand}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    
        <MenuItem Command="Copy" />
        
                    <MenuItem Header="Dodaj" 
                              Command="{Binding DodajTowarCommand }"
                              ToolTip="{Binding ToolTipDodajTowar}"
                              ToolTipService.ShowOnDisabled="True"/>
                    <MenuItem Header="Usuń" Command="{Binding UsunTowarCommand }"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>



                <DataGridComboBoxColumn Header="Towar"
                                        Width="250"
                                        ItemsSource="{Binding Source={StaticResource ListaTowarow}}"
                                        SelectedItemBinding="{Binding WybranyTowar}"
                                        DisplayMemberPath="Nazwa"
                                        SelectedValuePath="IDTowar"
                                        SelectedValueBinding="{Binding IDTowar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                        IsReadOnly="False"
                                        
                                        >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="KeyUp">
                            
                        <i:InvokeCommandAction Command="{Binding PrzyZmianieTekstuComboboxaCommand}"/>
        
                            <cmd:EventToCommand Command="{Binding PrzyZmianieTekstuComboboxaCommand}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                </DataGridComboBoxColumn>


                <!--<DataGridTemplateColumn
                    Header="Towar"
                    Width="250"
                    >
                    
        

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            
                            <dotNetKitControls:AutoCompleteComboBox
                                    ItemsSource="{Binding Path=DataContext.ListaTowarow, RelativeSource={RelativeSource AncestorType=Window}}"
                                    SelectedItem="{Binding WybranyTowar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    DisplayMemberPath="Nazwa"
                                    SelectedValuePath="IDTowar"
                                    SelectedValue="{Binding IDTowar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                    TextSearch.TextPath="Nazwa"
                                    IsDropDownOpen="True"
                                >
                                
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="KeyUp">
                                        <i:InvokeCommandAction Command="{Binding PrzyZmianieTekstuComboboxaCommand}"/>
                                        <cmd:EventToCommand Command="{Binding PrzyZmianieTekstuComboboxaCommand}" PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </dotNetKitControls:AutoCompleteComboBox>
        
                            --><!--<ComboBox 
                                    Name="cmbTowar"
                                    ItemsSource="{Binding Path=DataContext.ListaTowarow, RelativeSource={RelativeSource AncestorType=Window}}"
                                    SelectedItem="{Binding WybranyTowar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    DisplayMemberPath="Nazwa"
                                    SelectedValuePath="IDTowar"
                                    SelectedValue="{Binding IDTowar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                    IsEditable="True"
                                    IsTextSearchEnabled="True"
                                    StaysOpenOnEdit="True"
                                    IsDropDownOpen="True"
                                >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding PrzyZmianieTekstuComboboxaCommand}"/>
                                        
                                    <cmd:EventToCommand Command="{Binding PrzyZmianieTekstuComboboxaCommand}" PassEventArgsToCommand="True"/>
        
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Style.Triggers>
                                            <Trigger Property="Validation.HasError" Value="true">
                                                <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>--><!--
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                
        <!--#region Alternatywny combobox-->

        <!--#endregion-->
        

                <DataGridTextColumn Header="Ilość" Width="100" 
                                    x:Name="txtIlosc"
                                    Binding="{Binding Ilosc, StringFormat=N2,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                ValidatesOnDataErrors=True, NotifyOnValidationError=True}" 
                                    ElementStyle="{StaticResource ValidationTextBlockStyle}"
                                    />

                <DataGridComboBoxColumn Header="Jm"
                                        Width="100"
                                        ItemsSource="{Binding Source={StaticResource ListaJm}}"
                                        SelectedItemBinding="{Binding WybranaJm}"
                                        DisplayMemberPath="Jm"
                                        SelectedValuePath="IDJm"
                                        SelectedValueBinding="{Binding IDJm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                        />
                <DataGridTextColumn Header="Nr partii / Kod kreskowy" 
                                    Width="150" 
                                    Binding="{Binding NrParti,  
                                                Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                    />
                

        <!--#region Gerenuj kod kreskowy-->
        
                <DataGridTemplateColumn
                    Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button 
                                Height="15"
                                Width="25" 
                                    ToolTip="Wygeneruj nr partii"
                                Grid.Column="2"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},
                                            Path= DataContext.GenerujKodKreskowyCommand}"
                                Margin="5 0 0 10"
                                VerticalAlignment="Bottom"
                                Padding="0"
                                    >
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Bottom">
                                    <materialDesign:PackIcon Kind="GetApp" 
                                                             Width="15" 
                                                             Height="15" 
                                                             VerticalAlignment="Bottom" 
                                                             HorizontalAlignment="Left"
                                                             />
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
        <!--#endregion-->

        <!--#region  Drukuj kod-->
        
                <DataGridTemplateColumn
                    Width="30">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button 
                                Height="15"
                                Width="15" 
                                    ToolTip="Drukuj nr partii"
                                Grid.Column="2"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},
                                            Path= DataContext.DrukujKodKreskowyCommand}"
                                Margin="5 0 0 10"
                                VerticalAlignment="Bottom"
                                Padding="0"
                                    >
                                <StackPanel Orientation="Horizontal"
                                            VerticalAlignment="Bottom">
                                    <materialDesign:PackIcon Kind="Printer" 
                                                             Width="15" 
                                                             Height="15" 
                                                             VerticalAlignment="Bottom" 
                                                             HorizontalAlignment="Left"
                                                             />
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
        <!--#endregion-->
        


                <DataGridTextColumn Header="Ilość przed" Width="120" 
                                    Binding="{Binding IloscPrzed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=n2}"  
                                    IsReadOnly="True"
                                    ElementStyle="{StaticResource RightAlignStyle}"/>
                <DataGridTextColumn Header="Ilość po" Width="120" 
                                    Binding="{Binding IloscPo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=n2}"  
                                    IsReadOnly="True"
                                    ElementStyle="{StaticResource RightAlignStyle}"/>
                
                        <!--<DataGridTextColumn Header="Cena" Width="100" Binding="{Binding Cena, StringFormat=C2}"  ElementStyle="{StaticResource CenterAlignStyle}"/>
                                <DataGridTextColumn Header="VAT" Width="100" Binding="{Binding tblVAT.VAT}"  ElementStyle="{StaticResource CenterAlignStyle}"/>
                        <DataGridTextColumn Header="Koszt" Width="100" Binding="{Binding Koszt, StringFormat=C2}"  ElementStyle="{StaticResource CenterAlignStyle}"/>-->
        
                <DataGridTextColumn Header="Uwagi" Width="100" Binding="{Binding Uwagi}"  
                                    ElementStyle="{StaticResource LeftAlignStyle}"/>
            </DataGrid.Columns>
        </DataGrid>
        <!--#endregion-->
    </Grid>
</Window>
