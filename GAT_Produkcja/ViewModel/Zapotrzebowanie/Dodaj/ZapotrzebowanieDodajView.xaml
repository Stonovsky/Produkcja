<Window x:Class="GAT_Produkcja.ViewModel.Zapotrzebowanie.Dodaj.ZapotrzebowanieDodajView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GAT_Produkcja.ViewModel.Zapotrzebowanie.Dodaj"
        xmlns:convertersRGB="clr-namespace:GAT_Produkcja.UI.ViewModel.Zapotrzebowanie.Ewidencja.Converter"
        xmlns:converters="clr-namespace:GAT_Produkcja.UI.Converters"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:startUp="clr-namespace:GAT_Produkcja.Startup"
        startUp:ViewModelLocator.AutoWireViewModel="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:dgx="clr-namespace:DataGridExtensions;assembly=DataGridExtensions"

         TextElement.Foreground="{DynamicResource MaterialDesignBody}"
         TextElement.FontWeight="Regular"
         TextElement.FontSize="13"
         TextOptions.TextFormattingMode="Ideal"
         TextOptions.TextRenderingMode="Auto"
         Background="{DynamicResource MaterialDesignPaper}"
         FontFamily="{DynamicResource MaterialDesignFont}"
        
        Title="Zapotrzebowanie" Height="650" Width="1100" MinWidth="500"
            WindowStartupLocation="CenterScreen"
            Language="pl-PL"
      
        IsEnabled="{Binding WybranyStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={converters:ZapotrzebowanieBlokadaFormularzaConverter}}"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding ZamknijOknoCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <cmd:EventToCommand Command="{Binding ZaladujWartosciPoczatkoweCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="280"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        

        
        
        <!--#region Naglowek -->
        <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth5"
                             Margin="10"
                             Grid.Row="0"
                             Grid.ColumnSpan="3"
                             VerticalAlignment="Stretch"
                             >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel Grid.Column="0">
                    <TextBlock Text="{Binding Tytul}" 
                       Foreground="CadetBlue"
                       FontSize="14"
                       FontWeight="Bold"/>
                    <StackPanel Orientation="Horizontal">
                        
                    <ComboBox ItemsSource="{Binding ListaPracownikowGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              SelectedItem="{Binding WybranyPracownikGAT}"      
                              DisplayMemberPath="ImieINazwiskoGAT"
                                      SelectedValuePath="ID_PracownikGAT"
                                      SelectedValue="{Binding Zapotrzebowanie.IDPracownikGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                      materialDesign:HintAssist.Hint="Osoba zgłaszająca" materialDesign:HintAssist.IsFloating="True"
                                      Margin="5"
                                      Width="200"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                              />

                        <ComboBox ItemsSource="{Binding ListaPracownikowGAT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              SelectedItem="{Binding WybranyPracownikOdpZaZakup}"      
                              DisplayMemberPath="ImieINazwiskoGAT"
                                      SelectedValuePath="ID_PracownikGAT"
                                      SelectedValue="{Binding Zapotrzebowanie.IDPracownikOdpZaZakup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                                      materialDesign:HintAssist.Hint="Osoba realizująca" materialDesign:HintAssist.IsFloating="True"
                                      Margin="5"
                                      Width="200"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                              />
                    </StackPanel>

                </StackPanel>
                <StackPanel
                    Orientation="Horizontal"
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Margin="100 0 0 0"
                    >
                    <TextBlock Text="Weryfikacja: "
                               Margin="10"></TextBlock>
                    <ToggleButton Style="{StaticResource MaterialDesignActionToggleButton}"
                                  IsChecked="{Binding CzyZapotrzebowanieZweryfikowane, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ToolTip="Czy zweryfikowano zapotrzebowanie?"
                                  IsEnabled="{Binding WybranaPozycjaZapotrzebowania, Converter={converters:OdDostepuDyrektorTrueConverter} }"
                        >
                        <ToggleButton.Content>
                            <materialDesign:PackIcon Kind="Block"/>
                        </ToggleButton.Content>
                        <materialDesign:ToggleButtonAssist.OnContent>
                            <materialDesign:PackIcon Kind="CheckBold" />
                        </materialDesign:ToggleButtonAssist.OnContent>
                    </ToggleButton>

                </StackPanel>
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button Content="Usuń"
                            Command="{Binding UsunCommand}"
                            Margin="5"
                            />
                    <Button Content="Zapisz"
                            Command="{Binding ZapiszCommand}"
                            ToolTip="{Binding TooltipZapiszCommand}"
                            ToolTipService.ShowOnDisabled="True"
                            Margin="5"/>
                </StackPanel>
            </Grid>

        </materialDesign:Card>
            <!--#endregion-->
        
        <!--#region Zapotrzebowanie-->
        <materialDesign:Card  Grid.Row="1" Grid.Column="0"  
                              materialDesign:ShadowAssist.ShadowDepth="Depth5"
                              Margin="10"
                              VerticalAlignment="Stretch">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Informacje ogólne"
                           Margin="5"
                           Grid.Row="0"
                           />
                
                <StackPanel Orientation="Horizontal" Margin="5"
                        Grid.Row="0">

                <TextBox Text="{Binding Zapotrzebowanie.Nr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            materialDesign:HintAssist.Hint="Nr" materialDesign:HintAssist.IsFloating="True"
                            VerticalAlignment="Bottom"
                            Margin="5"
                            Width="60"
                            IsReadOnly="True"
                           />
                    <DatePicker SelectedDate="{Binding Zapotrzebowanie.DataZapotrzebowania, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Na kiedy" materialDesign:HintAssist.IsFloating="True"
                            VerticalAlignment="Bottom"
                            Margin="5"/>
                <ComboBox ItemsSource="{Binding ListaStatusow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding WybranyStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                          DisplayMemberPath="StatusZapotrzebowania"
                            SelectedValuePath="IDZapotrzebowanieStatus"
                            SelectedValue="{Binding Zapotrzebowanie.IDZapotrzebowanieStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Status" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                            IsEnabled="{Binding WybranyStatus, Converter={converters:StatusZapotrzebowaniaIsReadOnlyBoolConverter}}"
                          />
            </StackPanel>

                <TextBox Text="{Binding Zapotrzebowanie.Opis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                      Grid.Row="1"
                      materialDesign:HintAssist.Hint="Opis"
                      materialDesign:HintAssist.IsFloating="True"
                      Margin="5"
                      VerticalAlignment="Top"
                      TextWrapping="Wrap"/>
                <TextBox Text="{Binding Zapotrzebowanie.Uwagi, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"
                      Grid.Row="2"
                      materialDesign:HintAssist.Hint="Uwagi"
                      materialDesign:HintAssist.IsFloating="True"
                      Margin="5"
                      VerticalAlignment="Top"
                      TextWrapping="Wrap"/>
            </Grid>


        </materialDesign:Card>
        

        <!--#endregion-->
        
        <!--#region Kontrahent-->
        <materialDesign:Card 
                Grid.Row="1" Grid.Column="1"
                materialDesign:ShadowAssist.ShadowDepth="Depth5" 
                Margin="10"
                VerticalAlignment="Stretch">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical"
                            Grid.Row="0"
                            Margin="5"
                            >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock 
                            Grid.Column="0"        
                            Text="Zamowienie w firmie"
                            />
                        <Button Width="60" ToolTip="Wyszukaj firmę"
                                Grid.Column="2"
                                Command="{Binding PokazEwidencjeKontrahentowCommand}"
                                Margin="10"
                                VerticalAlignment="Top"
                                    >
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Magnify" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        <!--<TextBlock Text="Dodaj" VerticalAlignment="Center" FontSize="16"/>-->
                                    </StackPanel>
                        </Button>
                    </Grid>

                    <Separator Foreground="Gray"
                               Grid.Row="0"
                               />
                </StackPanel>


                    <TextBox Text="{Binding Kontrahent.Nazwa}"
                               Grid.Row="1"
                               materialDesign:HintAssist.Hint="Nazwa firmy"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                             />
                <TextBox Text="{Binding Kontrahent.Ulica}"
                               Grid.Row="2"
                               materialDesign:HintAssist.Hint="Ulica"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                         
                         />
                    <StackPanel Orientation="Horizontal"
                               Grid.Row="3"
                                >
                    <TextBox Text="{Binding Kontrahent.KodPocztowy}"
                               materialDesign:HintAssist.Hint="Kod pocztowy"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                             />

                    <TextBox Text="{Binding Kontrahent.Miasto}"
                               materialDesign:HintAssist.Hint="Miasto"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                             />
                    </StackPanel>
                <TextBox Text="{Binding Kontrahent.Wojewodztwo}"
                               Grid.Row="4"
                               materialDesign:HintAssist.Hint="Województwo"
                               materialDesign:HintAssist.IsFloating="True"
                               Margin="5"
                                IsReadOnly="True"
                         />
            </Grid>
        </materialDesign:Card>
        <!--#endregion-->
        
        <!--#region Klasyfikacja kosztu-->
        <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth5"
                             Margin="10"
                             Grid.Row="1"
                             Grid.Column="2"
                             VerticalAlignment="Stretch"
                             >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Klasyfikacja kosztu" 
                           Grid.Row="0"
                           Margin="5"
                           />
                <ComboBox ItemsSource="{Binding ListaKlasyfikacjiOgolnej, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            SelectedItem="{Binding WybranaKlasyfikacjaOgolna}"  
                            DisplayMemberPath="Nazwa"
                            SelectedValuePath="IDKlasyfikacjaOgolna"
                            SelectedValue="{Binding Zapotrzebowanie.IDKlasyfikacjaOgolna, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            
                            materialDesign:HintAssist.Hint="Ogólna" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                            Grid.Row="1"
                          />
                <ComboBox ItemsSource="{Binding ListaKlasyfikacjiSzczegolowej, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            SelectedItem="{Binding WybranaKlasyfikacjaSzczegolowa}"
                            DisplayMemberPath="Nazwa"
                            SelectedValuePath="IDKlasyfikacjaSzczegolowa"
                            SelectedValue="{Binding Zapotrzebowanie.IDKlasyfikacjaSzczegolowa, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Szczegółowa" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                            Grid.Row="2"
                          />
                <ComboBox ItemsSource="{Binding ListaUrzadzen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding WybraneUrzadzenie}"  
                          DisplayMemberPath="Nazwa"
                            SelectedValuePath="IDUrzadzenia"
                            SelectedValue="{Binding Zapotrzebowanie.IDUrzadzenia, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Urządzenie" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                            Grid.Row="3"
                          />
                <ComboBox ItemsSource="{Binding ListaFirm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding WybranaFirma}"  
                          DisplayMemberPath="Nazwa"
                            SelectedValuePath="IDFirma"
                            SelectedValue="{Binding Zapotrzebowanie.IDFirma, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
                            materialDesign:HintAssist.Hint="Firma" materialDesign:HintAssist.IsFloating="True"
                            Margin="5"
                            VerticalAlignment="Bottom"
                            Grid.Row="4"
                          />
            </Grid>
            
        </materialDesign:Card>
        <!--#endregion-->
        
        <!--#region Pliki-->
        <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth5"
                             Margin="10"
                             Grid.Row="2"
                             Grid.Column="2"
                             VerticalAlignment="Stretch"
                             >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>

                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Pliki" 
                               Margin="5"
                               Grid.Column="0"
                               />
                    <Button 
                        ToolTip="Dodaj plik"
                        Grid.Column="2"
                        Command="{Binding DodajPlikCommand}"
                        Margin="10"
                        VerticalAlignment="Top"
                        >
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Add" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>

                </Grid>
                <ListBox ItemsSource="{Binding ListaPlikow}"
                         SelectedItem="{Binding WybranyPlik}"
                         Grid.Row="1"
                         >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <cmd:EventToCommand Command="{Binding OtworzPlikCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Otwórz plik" Command="{Binding OtworzPlikCommand}"/>
                            <MenuItem Header="Dodaj plik" Command="{Binding DodajPlikCommand}"/>
                            <MenuItem Header="Usuń plik" Command="{Binding UsunPlikCommand}"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="File" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5"/>
                                        <TextBlock Text="{Binding NazwaPliku}" Margin="5"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </materialDesign:Card>
                         <!--DisplayMemberPath="NazwaPliku"-->
        <!--#endregion-->
        
        <!--#region Pozycje kosztowe-->

        <materialDesign:Card materialDesign:ShadowAssist.ShadowDepth="Depth5"
                             Margin="10"
                             Grid.Row="2"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             VerticalAlignment="Stretch"
                             >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Pozycje zapotrzebowania"
                               Margin="5"
                               />
                    <Button 
                            ToolTip="Dodaj koszt"
                            Grid.Column="2"
                            Command="{Binding DodajKosztCommand}"
                            Margin="10"
                            VerticalAlignment="Top"
                                    >
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Add" Width="30" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Button>
                </Grid>
                <DataGrid
                            Grid.Row="1"        
                            Margin="5"    
                            ItemsSource="{Binding ListaPozycjiZapotrzebowan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedItem="{Binding WybranaPozycjaZapotrzebowania}"
                            IsReadOnly="True"
                            FontSize="11"
                            dgx:DataGridFilter.IsAutoFilterEnabled="True"
                            SelectionMode="Extended"
                            >

                    <!--#region Zmiana koloru calego wiersza zgodnie z IValueConverter-->
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <!--<Setter Property="Foreground" Value="{Binding IDZapotrzebowanieStatus, Converter={convertersRGB:ZapotrzebowanieEwidencjaRedGreenGrayConverter}}"/>-->
                            <Setter Property="Background"
                                    Value="Transparent" />
                        </Style>
                    </DataGrid.RowStyle>
                    <!--#endregion-->

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <cmd:EventToCommand Command="{Binding EdytujKosztCommand}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="Copy" />
                            <MenuItem Header="Edytuj" Command="{Binding EdytujKosztCommand }"/>
                            <MenuItem Header="Dodaj" Command="{Binding DodajKosztCommand }"/>
                            <MenuItem Header="Usuń" Command="{Binding UsunPozycjeKosztowaCommand }"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Nazwa" Width="150" Binding="{Binding Nazwa}"  ElementStyle="{StaticResource LeftAlignStyle}"/>
                        <DataGridTextColumn Header="Ilość" Width="100" Binding="{Binding Ilosc, StringFormat=N2}"  ElementStyle="{StaticResource CenterAlignStyle}"/>
                        <DataGridTextColumn Header="Jm" Width="100" Binding="{Binding Jm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ElementStyle="{StaticResource CenterAlignStyle}"/>
                        <DataGridTextColumn Header="Cena netto" Width="100" Binding="{Binding Cena, StringFormat=C2}"  ElementStyle="{StaticResource CenterAlignStyle}"/>
                        <DataGridTextColumn Header="Koszt netto" Width="100" Binding="{Binding Koszt, StringFormat=C2}"  ElementStyle="{StaticResource CenterAlignStyle}"/>
                        <DataGridTextColumn Header="Uwagi" Width="100" Binding="{Binding Uwagi}"  ElementStyle="{StaticResource LeftAlignStyle}"/>
                    </DataGrid.Columns>

                </DataGrid>
            </Grid>

        </materialDesign:Card>
            <!--#endregion-->
    </Grid>
</Window>
